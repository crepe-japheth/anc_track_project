# Generated by Django 5.0.7 on 2024-09-16 10:54

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='HealthFacility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('district', models.CharField(max_length=255)),
                ('sector', models.CharField(max_length=255)),
                ('cell', models.CharField(max_length=255)),
                ('village', models.CharField(max_length=255)),
                ('director', models.CharField(max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=13, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 13 digits allowed.", regex='^\\+?1?\\d{10,13}$')])),
                ('status', models.CharField(choices=[('health_center', 'health_center'), ('hospital', 'hospital')], max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=100)),
                ('sector', models.CharField(max_length=100)),
                ('cell', models.CharField(max_length=100)),
                ('village', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=13, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 13 digits allowed.", regex='^\\+?1?\\d{10,13}$')])),
                ('identity', models.CharField(max_length=16, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('district', models.CharField(max_length=255)),
                ('sector', models.CharField(max_length=255)),
                ('cell', models.CharField(max_length=255)),
                ('village', models.CharField(max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=13, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 13 digits allowed.", regex='^\\+?1?\\d{10,13}$')])),
                ('health_facility', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.healthfacility')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('district', models.CharField(max_length=255)),
                ('sector', models.CharField(max_length=255)),
                ('cell', models.CharField(max_length=255)),
                ('village', models.CharField(max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=13, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 13 digits allowed.", regex='^\\+?1?\\d{10,13}$')])),
                ('health_facility', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_health_facility', to='main.healthfacility')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('CHW', 'CHW'), ('HEALTH FACILITY', 'Health Facility'), ('HOSPITAL', 'Hospital')], max_length=100)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='images/', verbose_name='profile picture (Logo)')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('first_login', models.BooleanField(blank=True, default=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('chw_assigned', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.communitywork')),
                ('health_facility_assigned', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.healthfacility')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('disease', models.CharField(max_length=255)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('bmi', models.DecimalField(decimal_places=2, max_digits=5)),
                ('diagnize_classification', models.CharField(choices=[('green', 'Green'), ('red', 'Red'), ('orange', 'Orange')], max_length=10)),
                ('is_transferred', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('active', 'Being Taken Care of'), ('recovered', 'Recovered'), ('deceased', 'Deceased')], default='active', max_length=10)),
                ('community_work', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.communitywork')),
                ('health_facility', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.healthfacility')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visits', to='main.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_date', models.DateTimeField(auto_now_add=True)),
                ('patient_arrived_at', models.DateTimeField(blank=True, null=True)),
                ('delay_in_hours', models.PositiveIntegerField(blank=True, null=True)),
                ('from_health_facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_transfers', to='main.healthfacility')),
                ('to_hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_transfers', to='main.healthfacility')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to='main.visit')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateField()),
                ('appointment_time', models.TimeField()),
                ('arrived_at', models.DateField(blank=True, null=True)),
                ('patient', models.ForeignKey(help_text='patient visit', on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='main.visit')),
            ],
        ),
    ]
